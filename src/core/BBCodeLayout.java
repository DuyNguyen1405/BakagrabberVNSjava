package core;

import gui.Config;

import java.io.*;

public class BBCodeLayout {

    private static String currentLayout;

    public static String getHostImageLink() {
        HostingService currentHostingService = Config.getHost();
        return currentHostingService.imageLink;
    }

    public static String getDefaultRawTemplate() {
        String defaultRaw = "[margin=700]\n"
                + "[CENTER][FONT=\"Palatino Linotype\"][COLOR=\"DarkRed\"][SIZE=\"5\"]$title[/SIZE][/COLOR][/FONT][/CENTER]\n"
                + "[limit=700]\n" + "[limitr=300]\n" + "[CENTER]\n" + "[IMG]$cover[/IMG]\n"
                + "[url=\"$url\"]Mangaupdates[/url][/CENTER]\n\n" + "[/limitr]\n" + "[B]Associated Names[/B]\n"
                + "$associatedNames\n\n" + "[B]Status in Country of Origin[/B]\n" + "$status\n\n" + "[B]Genre[/B]\n"
                + "$genres\n\n" + "[B]Author(s)[/B]\n" + "$authors\n\n" + "[B]Artist(s)[/B]\n" + "$artists\n\n"
                + "[B]Year[/B]\n" + "$year\n\n" + "[B]Description[/B]\n" + "[justify]$description[/justify]\n\n"
                + "[HIDE][/limit]\n" + "[CENTER]\n"
                + "[FONT=\"Palatino Linotype\"][COLOR=\"DarkGreen\"][SIZE=\"4\"][B]DOWNLOAD[/B][/SIZE][/COLOR][/FONT]\n"
                + "$host\n\n" + "$downloadLinks\n"
                + "[/CENTER][/HIDE]\n" + "[FONT=\"Courier New\"][RIGHT][I]--- Generated by 3kGraber tool ---[/I][/RIGHT][/FONT]"
                + "[/margin]\n";
        currentLayout = defaultRaw.replace("$host", getHostImageLink());
        return currentLayout;
    }

    public static String getDefaultEngTemplate() {
        String defaultEng = "[margin=700]\n"
                + "[CENTER][FONT=\"Palatino Linotype\"][COLOR=\"DarkRed\"][SIZE=\"5\"]$title[/SIZE][/COLOR][/FONT][/CENTER]\n"
                + "[limit=700]\n" + "[limitr=300]\n" + "[CENTER]\n" + "[IMG]$cover[/IMG]\n"
                + "[url=\"$url\"]Mangaupdates[/url][/CENTER]\n\n" + "[/limitr]\n" + "[B]Associated Names[/B]\n"
                + "$associatedNames\n\n" + "[B]Groups Scanlating[/B]\n" + "$groupsScanlating\n\n"
                + "[B]Status in Country of Origin[/B]\n"
                + "$status\n\n" + "[B]Genre[/B]\n" + "$genres\n\n" + "[B]Author(s)[/B]\n" + "$authors\n\n"
                + "[B]Artist(s)[/B]\n" + "$artists\n\n" + "[B]Year[/B]\n" + "$year\n\n" + "[B]Description[/B]\n"
                + "[justify]$description[/justify]\n\n" + "[HIDE][/limit]\n" + "[CENTER]\n"
                + "[FONT=\"Palatino Linotype\"][COLOR=\"DarkGreen\"][SIZE=\"4\"][B]DOWNLOAD[/B][/SIZE][/COLOR][/FONT]\n"
                + "$host\n\n" + "$downloadLinks\n"
                + "[/CENTER][/HIDE]\n" + "[FONT=\"Courier New\"][RIGHT][I]--- Generated by 3kGraber tool ---[/I][/RIGHT][/FONT]"
                + "[/margin]\n";
        currentLayout = defaultEng.replace("$host", getHostImageLink());
        return currentLayout;
    }

    public static String getCurrentLayout() throws IOException {
        String currentConfigLayout = Config.getCurrentConfig().getProperty("currentTemplate");
        if (currentConfigLayout.equals(Config.defaultEngTemplate))
            return getDefaultEngTemplate();
        else if (currentConfigLayout.equals(Config.defaultRawTemplate))
            return getDefaultRawTemplate();
        else {
            return BBCodeLayout.getCustomLayout();
        }
    }

    public static String getCustomLayout() throws IOException {
        String customLayoutFile = "customLayout.txt";
        File customLayout = new File(customLayoutFile);

        if (customLayout.exists()) {
            StringBuilder sb = new StringBuilder();
            FileInputStream fis = new FileInputStream(customLayoutFile);
            InputStreamReader in = new InputStreamReader(fis, "UTF-8");
            BufferedReader br = new BufferedReader(in);
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
            }
            br.close();
            return sb.toString();
        } else {
            customLayout.createNewFile();
            return "";
        }
    }
}
